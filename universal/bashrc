#
# ~/.bashrc
#

  # ANSI color codes
RS="\e[0m"    # reset
HC="\e[1m"    # hicolor
UL="\e[4m"    # underline
INV="\e[7m"   # inverse background and foreground
FBLK="\e[30m" # foreground black
FRED="\e[31m" # foreground red
FGRN="\e[32m" # foreground green
FYEL="\e[33m" # foreground yellow
FBLE="\e[34m" # foreground blue
FMAG="\e[35m" # foreground magenta
FCYN="\e[36m" # foreground cyan
FWHT="\e[37m" # foreground white
BBLK="\e[40m" # background black
BRED="\e[41m" # background red
BGRN="\e[42m" # background green
BYEL="\e[43m" # background yellow
BBLE="\e[44m" # background blue
BMAG="\e[45m" # background magenta
BCYN="\e[46m" # background cyan
BWHT="\e[47m" # background white


WORKSTATIONS="aqua blue cyan diamond emerald honey neon orange pink silver taupe violet xray yellow"

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.keychain/$HOSTNAME-sh ]; then # Fix gpg issue regardless of host
	. ~/.keychain/$HOSTNAME-sh
fi

alias ls='ls -l --color=auto'
alias grep='grep -E --color'

auto_ssh_key() {
	for key in $(command ls -1 ~/.ssh | grep -E 'rsa[^\.]*$'); do
		keychain -q --nogui ~/.ssh/$key
	done
}

if [[ $WORKSTATIONS =~ $(hostname) ]]; then
	#OSL Host stuff
	export HISTFILESIZE=10000000000
	export HISTTIMEFORMAT="%F %T "
	
	auto_ssh_key
	
	function fsh () {
		ssh -t -i ~/.ssh/id_rsa-fir fir "sudo bash -i -c \"ssh $@\""
	}
	
	alias ldapvi='ldapvi -D uid=tolvstaa,ou=People,dc=osuosl,dc=org -h ldaps://ldap1.osuosl.org'
	alias gfr='git fetch && git rebase remotes/origin/master'
	alias ff='ssh -t fir sudo vim /root/.../firfile'
	alias vpn='sudo openvpn ~/.openvpn/openvpn.conf'
	alias mr="mr -j 8 $@"
elif [[ $(hostname) = "avalon-arch" ]]; then
	#Avalon stuff
	if [ -z $(pidof gpg-agent) ]; then
		auto_ssh_key
	fi
else
	if which keychain &>/dev/null; then
		auto_ssh_key
	fi
fi



prompt_command() {
	# autoshrink pwd
	local newPWD=""
	local fracLim=4

	if [ $HOME == $PWD ]; then
		newPWD="~"
	elif [ $HOME ==  ${PWD:0:${#HOME}} ]; then
		newPWD="~${PWD:${#HOME}}"
	else
		newPWD=$PWD
	fi

	local fields=$(echo $newPWD | awk 'BEGIN{FS="/"};{print NF}')
	
	while [ "${#newPWD}" -gt "$(( COLUMNS / fracLim ))" ] && [ "$fields" -gt "0" ]; do
		newPWD=$( echo $newPWD | cut -d"/" -f 2- )
		fields=$((fields - 1))
	done
	
	# auto-git
	local mygit="$(git symbolic-ref --short HEAD 2>/dev/null)";
	if [ -n "$mygit" ]; then
		if [ "$(echo "$mygit" | wc -m)" -gt 16 ]; then
			mygit=$(echo $mygit | tail -c 16)
			mygit="[${FYEL}â€¦${mygit}${RS}]"
		else
			mygit="[${FYEL}${mygit}${RS}]"
		fi
	fi

	# prompt char
	[[ $(id -u) = 0 ]] && local promptchar="#" || local promptchar="$"

	PS1="(\t)\[${FCYN}\]\u@\h\[${RS}\]:\[${FGRN}\]${newPWD}\[${RS}\]${mygit}\$ "
}

PROMPT_COMMAND=prompt_command
